os: linux
language: shell

stages:
  - name: Test template
  - name: Deploy infra
  
services:
  - docker

install:
  - sudo apt-add-repository "deb http://archive.ubuntu.com/ubuntu trusty-backports main restricted universe multiverse"
  - sudo apt-get -qq update
  - sudo pip install awscli

jobs:
  include:
    - stage: Test template
      script:
        - sed -i -e "s/DEPLOYHASH/${deploy_table}/g" template_cc_cloudformation.yml
        - sed -i -e "s/ARTIFACTBUCKETNAME/${artifact_bucket}/g" template_cc_cloudformation.yml
        - sed -i -e "s/CONTEXTTABLE/${dynamodb_context}/g" template_cc_cloudformation.yml
        - sed -i -e "s/ACCOUNTNUMBER/${account_number}/g" template_cc_cloudformation.yml
        - aws cloudformation validate-template --region ${terraform_region} --template-body file://template_cc_cloudformation.yml

    - stage: Test template
      script:
        - aws cloudformation validate-template --region ${terraform_region} --template-body file://sandbox-vpc.yml

    - stage: Test template
      script:
        - echo "Check for commit ${TRAVIS_COMMIT} and tag ${TRAVIS_TAG} from branch ${TRAVIS_BRANCH}."
        - echo "This is build number ${TRAVIS_BUILD_NUMBER}, for ${TRAVIS_REPO_SLUG}."
        - sed -i -e "s/DEPLOYHASH/${deploy_table}/g" template_cc_cloudformation.yml
        - sed -i -e "s/ARTIFACTBUCKETNAME/${artifact_bucket}/g" template_cc_cloudformation.yml
        - sed -i -e "s/CONTEXTTABLE/${dynamodb_context}/g" template_cc_cloudformation.yml
        - sed -i -e "s/ACCOUNTNUMBER/${account_number}/g" template_cc_cloudformation.yml
        - docker pull almerhor/cfnlint:latest
        - docker run --rm -v $(pwd)/:/lintfiles almerhor/cfnlint -t template_cc_cloudformation.yml
        - docker run --rm -v $(pwd)/:/lintfiles almerhor/cfnlint -i W3010 -t sandbox-vpc.yml

    - stage: Test template
      os: linux
      language: python
      python:
        - "3.8"
      script:
        - pip install --upgrade pip
        - pip install taskcat
        - taskcat test run
      deploy:
        - provider: s3
          bucket: ${taskcat_bucket}
          upload-dir: ${TRAVIS_REPO_SLUG}/${TRAVIS_BUILD_NUMBER}
          local_dir: taskcat_outputs

    - stage: Deploy infra
      script:
        - echo "Feeding CloudFormation template with variables."
        - sed -i -e "s/DEPLOYHASH/${deploy_table}/g" template_cc_cloudformation.yml
        - sed -i -e "s/ARTIFACTBUCKETNAME/${artifact_bucket}/g" template_cc_cloudformation.yml
        - sed -i -e "s/CONTEXTTABLE/${dynamodb_context}/g" template_cc_cloudformation.yml
        - sed -i -e "s/ACCOUNTNUMBER/${account_number}/g" template_cc_cloudformation.yml
      deploy:
        - provider: cloudformation
          edge: true # use DPLv2
          access_key_id: ${AWS_ACCESS_KEY_ID}
          secret_access_key: ${AWS_SECRET_ACCESS_KEY}
          capabilities: CAPABILITY_NAMED_IAM
          template: template_cc_cloudformation.yml
          stack_name: Alexa-CloudControl-Infrastructure
          region: ${terraform_region}
          wait: true
          promote: true
        - provider: cloudformation
          edge: true
          access_key_id: ${AWS_ACCESS_KEY_ID}
          secret_access_key: ${AWS_SECRET_ACCESS_KEY}
          capabilities: CAPABILITY_NAMED_IAM
          template: sandbox-vpc.yml
          stack_name: Alexa-CloudControl-Sandbox
          region: ${terraform_region}
          wait: true
          promote: true

